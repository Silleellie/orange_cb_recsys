name: Build & Test & Push
on:
  push:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]
    
env:
    IMAGE_NAME: framework_dependencies
    COVERALLS_REPO_TOKEN: m7F9CNmqoMWrzUv0lcmojwOCqk7PGjDG8
    
jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - 
       name: Checkout 
       uses: actions/checkout@v2
       with:
          fetch-depth: 0
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      -
        name: Setup python
        uses: actions/setup-python@v2
        with:
            python-version: 3.8 #install the python needed
      -
        name: Check File Changed
        id: check
        run: |
              git diff --name-only HEAD^ HEAD > files.txt
              echo "::set-output name=must_build::false"
              while IFS= read -r file
              do
                if [[ $file == */Dockerfile ]] || [[ $file == setup.py ]]; then
                  echo "::set-output name=must_build::true"
                  echo "Necessario buildare immagine Docker"
                  break
                fi
              done < files.txt
              rm files.txt
              if ${{ steps.check.outputs.must_build == 'false' }}; then
                if ! docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest; then
                    echo "::set-output name=must_build::true"
                    echo "Necessario buildare immagine Docker"
                fi
              fi
              
      -
        name: Set up Docker Buildx
        if: ${{ steps.check.outputs.must_build == 'true' }}
        uses: docker/setup-buildx-action@v1
      -
        name: Build docker image
        id: docker_build
        if: ${{ steps.check.outputs.must_build == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: ${{ github.WORKSPACE }}
          file:  Dockerfile/Dockerfile
          load: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
      -
         name: Test
         run:
               |
                container_id=$(docker run -d -v "$(pwd)":/usr/src -it  ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }})
                docker exec -i $container_id pip install coverage coveralls pytest
                docker exec -i $container_id coverage run --source=orange_cb_recsys -m pytest test/ -W ignore::DeprecationWarning
                docker exec -i $container_id bash -c "COVERALLS_REPO_TOKEN=${{ env.COVERALLS_REPO_TOKEN }} coveralls"
                docker stop $container_id
                docker container rm $container_id
      -
         name: Push image to docker hub
         id: docker_push
         if: ${{ steps.check.outputs.must_build == 'true' }}
         run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
      
